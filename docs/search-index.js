crystal_doc_search_index_callback({"repository_name":"secrets","body":"# secrets.cr\n\n[![Build Status](https://travis-ci.org/HCLarsen/secrets.svg?branch=main)](https://travis-ci.org/github/HCLarsen/secrets)\n\nEncrypted credentials management system, largely based on [Rails/secrets](https://github.com/rails/rails/blob/3a69bcdf1fff15234410a598617767203ab38eae/railties/lib/rails/secrets.rb)\n\nOffers a command line interface with [secrets-cli](https://github.com/HCLarsen/secrets-cli)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\n   dependencies:\n     secrets:\n       github: HCLarsen/secrets\n```\n\n2. Run `shards install`\n\n## Usage\n\nWhen the `Secrets` class is instantiated, it loads the data from an encoded YAML file. The key used to decode the data can either come from a local key file, or an environment variable named SECRETS_KEY.\n\n```ruby\nrequire \"secrets\"\n\nsecrets = Secrets.new\n```\n\nUnlike similar libraries, the `Secrets` class isn't a singleton. This allows the dev to have separate files for different environments, such as development, testing, and production.\n\nIf unspecified, the default name for the secrets file is `secrets.yml.enc`, and the location is the current directory. If a specific name/location are required, then they can be specified during the initialization:\n\n```ruby\nrequire \"secrets\"\n\nsecrets = Secrets.new(\"./config/production.yml.enc\")\n```\n\nOR:\n\n```ruby\nrequire \"secrets\"\n\nsecrets = Secrets.load(\"./config/production.yml.enc\")\n```\n\nSecrets are presented as a `Hash` of type `String => YAML::Any`.\n\n```ruby\nrequire \"secrets\"\n\nsecrets = Secrets.load\nsecrets[\"API_KEY\"].as_s           #=> \"RANDOM_KEY\"\n\nsecrets[\"API2\"][\"EMAIL\"].as_s     #=> \"random@example.org\"\nsecrets[\"API2\"][\"PASSWORD\"].as_s  #=> \"DontUseACommonPassword\"\n```\n\n## Development\n\nTODO: Write development instructions here\n\n## Contributing\n\n1. Fork it (<https://github.com/HCLarsen/secrets/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Chris Larsen](https://github.com/HCLarsen) - creator and maintainer\n","program":{"html_id":"secrets/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"secrets","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"secrets/Secrets","path":"Secrets.html","kind":"class","full_name":"Secrets","name":"Secrets","abstract":false,"superclass":{"html_id":"secrets/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"secrets/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"secrets/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"secrets","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"DEFAULT_KEY_PATH","name":"DEFAULT_KEY_PATH","value":"\"secrets.key\"","doc":null,"summary":null},{"id":"DEFAULT_PATH","name":"DEFAULT_PATH","value":"\"secrets.yml.enc\"","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The Secrets class keeps track of a YAML-like structure of secrets for an\napplication, and is responsible for encrypting and decrypting the file where\nthose secrets are stored.\n\nThe instantiation of a Secrets object loads data from an encoded YAML file,\nand presents the data as a hash-like object.\n\n```\nsecrets = Secrets.new\nsecrets[\"username\"] # => \"warmachine68@starkindustries.com\"\n```\n\nAn alternate way to use the library is with the `Secrets#raw`, combined with\nthe `YAML::Serializable` module.\n\n```\nclass MySecrets\n  include YAML::Serializable\n\n  property username : String\n  property password : String\nend\n\nsecrets = Secrets.new\nsecrets.raw # => \"---\\nusername: warmachine68@starkindustries.com\\npassword: WARMACHINEROX\\n\"\n\nmy_secrets = MySecrets.from_yaml(secrets.raw)\nmy_secrets[\"username\"] # => warmachine68@starkindustries.com\n```\nNote: Changes to the internal data of a `Secrets` object doesn't result in\ndata being saved to the file. If this is intended behaviour, it must be done\nmanually.","summary":"<p>The Secrets class keeps track of a YAML-like structure of secrets for an application, and is responsible for encrypting and decrypting the file where those secrets are stored.</p>","class_methods":[{"id":"generate(path=DEFAULT_PATH,key_path=DEFAULT_KEY_PATH)-class-method","html_id":"generate(path=DEFAULT_PATH,key_path=DEFAULT_KEY_PATH)-class-method","name":"generate","doc":"Generates an encrypted secrets file and key file at the specified locations,\noverwriting the files if they already exist.\n\nIf this command is run from the same directory as the `gitignore` file, it\nwill also read the file, and add the key file to it if necessary.\n\nNote: This command won't create any folders required, and will throw a\nNotFoundError if the folder doesn't exist.\n","summary":"<p>Generates an encrypted secrets file and key file at the specified locations, overwriting the files if they already exist.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"DEFAULT_PATH","external_name":"path","restriction":""},{"name":"key_path","doc":null,"default_value":"DEFAULT_KEY_PATH","external_name":"key_path","restriction":""}],"args_string":"(path = <span class=\"t\">DEFAULT_PATH</span>, key_path = <span class=\"t\">DEFAULT_KEY_PATH</span>)","args_html":"(path = <span class=\"t\">DEFAULT_PATH</span>, key_path = <span class=\"t\">DEFAULT_KEY_PATH</span>)","location":{"filename":"src/secrets.cr","line_number":77,"url":null},"def":{"name":"generate","args":[{"name":"path","doc":null,"default_value":"DEFAULT_PATH","external_name":"path","restriction":""},{"name":"key_path","doc":null,"default_value":"DEFAULT_KEY_PATH","external_name":"key_path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"file_path = path_with_extension(path)\nkey_file_path = key_path_with_extension(key_path)\nkey = Secrets.generate_key\nFile.write(key_file_path, key)\ncipher = Secrets.new_cipher\ncipher.encrypt\ncipher.key = key\nencrypted = (String.new(cipher.update(\"---\"))) + (String.new(cipher.final))\nFile.write(file_path, encrypted)\nif File.exists?(\".gitignore\")\n  ignore_content = key_path_with_extension(key_path)\n  if (File.read(\".gitignore\")).includes?(ignore_content)\n  else\n    File.write(\".gitignore\", ignore_content, mode: \"a\")\n  end\nend\n"}},{"id":"generate!(path=DEFAULT_PATH,key_path=DEFAULT_KEY_PATH)-class-method","html_id":"generate!(path=DEFAULT_PATH,key_path=DEFAULT_KEY_PATH)-class-method","name":"generate!","doc":"Generates an encrypted secrets file and key file at the specified locations,\nraising an error if the files already exist.\n\nIf this command is run from the same directory as the `gitignore` file, it\nwill also read the file, and add the key file to it if necessary.\n\nNote: As with the standard `generate` method, this command won't create\nany folders required, and will throw a NotFoundError if the folder doesn't\nexist.","summary":"<p>Generates an encrypted secrets file and key file at the specified locations, raising an error if the files already exist.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"DEFAULT_PATH","external_name":"path","restriction":""},{"name":"key_path","doc":null,"default_value":"DEFAULT_KEY_PATH","external_name":"key_path","restriction":""}],"args_string":"(path = <span class=\"t\">DEFAULT_PATH</span>, key_path = <span class=\"t\">DEFAULT_KEY_PATH</span>)","args_html":"(path = <span class=\"t\">DEFAULT_PATH</span>, key_path = <span class=\"t\">DEFAULT_KEY_PATH</span>)","location":{"filename":"src/secrets.cr","line_number":108,"url":null},"def":{"name":"generate!","args":[{"name":"path","doc":null,"default_value":"DEFAULT_PATH","external_name":"path","restriction":""},{"name":"key_path","doc":null,"default_value":"DEFAULT_KEY_PATH","external_name":"key_path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"file_path = path_with_extension(path)\nkey_file_path = key_path_with_extension(key_path)\nif File.exists?(file_path)\n  raise(File::AlreadyExistsError.new(\"Secrets file already exists\", file: file_path))\nend\nif File.exists?(key_file_path)\n  raise(File::AlreadyExistsError.new(\"Key file already exists\", file: key_file_path))\nend\ngenerate(file_path, key_file_path)\n"}}],"constructors":[{"id":"new(file_path=DEFAULT_PATH,key_path=DEFAULT_KEY_PATH)-class-method","html_id":"new(file_path=DEFAULT_PATH,key_path=DEFAULT_KEY_PATH)-class-method","name":"new","doc":"Initializes a new `Secrets` object, and loads it from the encrypted YAML\nfile at the specified location.\n\nRaises a File::NotFoundError if the specified secrets file doesn't exist.\n","summary":"<p>Initializes a new <code><a href=\"Secrets.html\">Secrets</a></code> object, and loads it from the encrypted YAML file at the specified location.</p>","abstract":false,"args":[{"name":"file_path","doc":null,"default_value":"DEFAULT_PATH","external_name":"file_path","restriction":""},{"name":"key_path","doc":null,"default_value":"DEFAULT_KEY_PATH","external_name":"key_path","restriction":""}],"args_string":"(file_path = <span class=\"t\">DEFAULT_PATH</span>, key_path = <span class=\"t\">DEFAULT_KEY_PATH</span>)","args_html":"(file_path = <span class=\"t\">DEFAULT_PATH</span>, key_path = <span class=\"t\">DEFAULT_KEY_PATH</span>)","location":{"filename":"src/secrets.cr","line_number":60,"url":null},"def":{"name":"new","args":[{"name":"file_path","doc":null,"default_value":"DEFAULT_PATH","external_name":"file_path","restriction":""},{"name":"key_path","doc":null,"default_value":"DEFAULT_KEY_PATH","external_name":"key_path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(file_path, key_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":"returns the element at the given *index_or_key*, raises if out of bounds\nor the key is missing.","summary":"<p>returns the element at the given <em>index_or_key</em>, raises if out of bounds or the key is missing.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/secrets.cr","line_number":119,"url":null},"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data[*args, **options]"}},{"id":"[](*args,**options,&)-instance-method","html_id":"[](*args,**options,&)-instance-method","name":"[]","doc":"returns the element at the given *index_or_key*, raises if out of bounds\nor the key is missing.","summary":"<p>returns the element at the given <em>index_or_key</em>, raises if out of bounds or the key is missing.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/secrets.cr","line_number":119,"url":null},"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@data[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"[]=(*args,**options)-instance-method","html_id":"[]=(*args,**options)-instance-method","name":"[]=","doc":"Sets the value of *key* to the given *value*.","summary":"<p>Sets the value of <em>key</em> to the given <em>value</em>.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/secrets.cr","line_number":126,"url":null},"def":{"name":"[]=","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data[*args] = **options"}},{"id":"[]?(*args,**options)-instance-method","html_id":"[]?(*args,**options)-instance-method","name":"[]?","doc":"returns the element at the given *index_or_key*, or `nil` if out of bounds\nor the key is missing.","summary":"<p>returns the element at the given <em>index_or_key</em>, or <code>nil</code> if out of bounds or the key is missing.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/secrets.cr","line_number":123,"url":null},"def":{"name":"[]?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data[*args, **options]?"}},{"id":"[]?(*args,**options,&)-instance-method","html_id":"[]?(*args,**options,&)-instance-method","name":"[]?","doc":"returns the element at the given *index_or_key*, or `nil` if out of bounds\nor the key is missing.","summary":"<p>returns the element at the given <em>index_or_key</em>, or <code>nil</code> if out of bounds or the key is missing.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/secrets.cr","line_number":123,"url":null},"def":{"name":"[]?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@data[*args, **options]? do |*yield_args|\n  yield *yield_args\nend"}},{"id":"decrypt(data:String):String-instance-method","html_id":"decrypt(data:String):String-instance-method","name":"decrypt","doc":"Decrypts *data* using the key and returns the decrypted data as a `String`.","summary":"<p>Decrypts <em>data</em> using the key and returns the decrypted data as a <code>String</code>.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"args_string":"(data : String) : String","args_html":"(data : String) : String","location":{"filename":"src/secrets.cr","line_number":151,"url":null},"def":{"name":"decrypt","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"decipher = Secrets.new_cipher\ndecipher.decrypt\ndecipher.key = @key\n(String.new(decipher.update(data))) + (String.new(decipher.final))\n"}},{"id":"encrypt(data:String):String-instance-method","html_id":"encrypt(data:String):String-instance-method","name":"encrypt","doc":"Encrypts *data* using the object's key and returns the encrypted data as\na `String`.","summary":"<p>Encrypts <em>data</em> using the object's key and returns the encrypted data as a <code>String</code>.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"args_string":"(data : String) : String","args_html":"(data : String) : String","location":{"filename":"src/secrets.cr","line_number":143,"url":null},"def":{"name":"encrypt","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"cipher = Secrets.new_cipher\ncipher.encrypt\ncipher.key = @key\n(String.new(cipher.update(data))) + (String.new(cipher.final))\n"}},{"id":"file_path:String-instance-method","html_id":"file_path:String-instance-method","name":"file_path","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/secrets.cr","line_number":50,"url":null},"def":{"name":"file_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@file_path"}},{"id":"key_file_path:String-instance-method","html_id":"key_file_path:String-instance-method","name":"key_file_path","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/secrets.cr","line_number":51,"url":null},"def":{"name":"key_file_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@key_file_path"}},{"id":"load_data:Any-instance-method","html_id":"load_data:Any-instance-method","name":"load_data","doc":"Loads the YAML data from the encrypted secrets file.","summary":"<p>Loads the YAML data from the encrypted secrets file.</p>","abstract":false,"args":[],"args_string":" : Any","args_html":" : <a href=\"Secrets/Any.html\">Any</a>","location":{"filename":"src/secrets.cr","line_number":135,"url":null},"def":{"name":"load_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"encrypted = File.read(@file_path)\ndecrypted = decrypt(encrypted)\nAny.from_yaml(decrypted)\n"}},{"id":"raw:String-instance-method","html_id":"raw:String-instance-method","name":"raw","doc":"Returns the raw YAML of the Secrets file\n\nThis allows the use of `Secrets` with the `YAML::Serializable` module.\n\n```\nclass MySecrets\n  include YAML::Serializable\n\n  property username : String\n  property password : String\nend\n\nmy_secrets = MySecrets.from_yaml(Secrets.new.raw)\nmy_secrets[\"username\"] # => warmachine68@starkindustries.com\n```","summary":"<p>Returns the raw YAML of the Secrets file</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/secrets.cr","line_number":173,"url":null},"def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@data.to_yaml"}},{"id":"reset-instance-method","html_id":"reset-instance-method","name":"reset","doc":"Generates a new encryption key, saves it to the key file, and encrypts the\ndata file using the new key.","summary":"<p>Generates a new encryption key, saves it to the key file, and encrypts the data file using the new key.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/secrets.cr","line_number":179,"url":null},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"load_data\n@key = Secrets.generate_key\nFile.write(@key_file_path, @key)\nsave\n"}},{"id":"save-instance-method","html_id":"save-instance-method","name":"save","doc":"Saves data to the secrets file.","summary":"<p>Saves data to the secrets file.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/secrets.cr","line_number":129,"url":null},"def":{"name":"save","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"encrypted = encrypt(@data.to_yaml)\nFile.write(@file_path, encrypted)\n"}}],"macros":[],"types":[{"html_id":"secrets/Secrets/Any","path":"Secrets/Any.html","kind":"struct","full_name":"Secrets::Any","name":"Any","abstract":false,"superclass":{"html_id":"secrets/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"secrets/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"secrets/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"secrets/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"secrets","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"secrets/Secrets","kind":"class","full_name":"Secrets","name":"Secrets"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"from_yaml(yaml:String):Any-class-method","html_id":"from_yaml(yaml:String):Any-class-method","name":"from_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"String"}],"args_string":"(yaml : String) : Any","args_html":"(yaml : String) : <a href=\"../Secrets/Any.html\">Any</a>","location":{"filename":"src/secrets/any.cr","line_number":157,"url":null},"def":{"name":"from_yaml","args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"parsed = YAML.parse(yaml)\nif !parsed.raw.nil?\n  Any.new(parsed)\nelse\n  Any.new({} of String => Any)\nend\n"}},{"id":"new(raw:Type)-class-method","html_id":"new(raw:Type)-class-method","name":"new","doc":"Creates an `Any` that wraps the given `Type`.\n","summary":"<p>Creates an <code><a href=\"../Secrets/Any.html\">Any</a></code> that wraps the given <code><a href=\"../Secrets/Any/Type.html\">Type</a></code>.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Type"}],"args_string":"(raw : Type)","args_html":"(raw : <a href=\"../Secrets/Any/Type.html\">Type</a>)","location":{"filename":"src/secrets/any.cr","line_number":20,"url":null},"def":{"name":"new","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Type"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(array:Array(String))-class-method","html_id":"new(array:Array(String))-class-method","name":"new","doc":"Creates an `Any` that wraps the given `Array` of Strings.","summary":"<p>Creates an <code><a href=\"../Secrets/Any.html\">Any</a></code> that wraps the given <code>Array</code> of Strings.</p>","abstract":false,"args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array(String)"}],"args_string":"(array : Array(String))","args_html":"(array : Array(String))","location":{"filename":"src/secrets/any.cr","line_number":24,"url":null},"def":{"name":"new","args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(array)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(hash:Hash(String,String))-class-method","html_id":"new(hash:Hash(String,String))-class-method","name":"new","doc":"Creates an `Any` that wraps the given `Hash` of Strings.","summary":"<p>Creates an <code><a href=\"../Secrets/Any.html\">Any</a></code> that wraps the given <code>Hash</code> of Strings.</p>","abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":"Hash(String, String)"}],"args_string":"(hash : Hash(String, String))","args_html":"(hash : Hash(String, String))","location":{"filename":"src/secrets/any.cr","line_number":29,"url":null},"def":{"name":"new","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(hash)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(any:YAML::Any)-class-method","html_id":"new(any:YAML::Any)-class-method","name":"new","doc":"Creates an `Any` from the raw value of a `YAML::Any`.","summary":"<p>Creates an <code><a href=\"../Secrets/Any.html\">Any</a></code> from the raw value of a <code>YAML::Any</code>.</p>","abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"YAML::Any"}],"args_string":"(any : YAML::Any)","args_html":"(any : YAML::Any)","location":{"filename":"src/secrets/any.cr","line_number":36,"url":null},"def":{"name":"new","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(any)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](index_or_key:Int32|String):Any-instance-method","html_id":"[](index_or_key:Int32|String):Any-instance-method","name":"[]","doc":"Assumes the underlying value is an `Array` or `Hash`\nand returns the element at the given *index_or_key*.\n\nRaises if the underlying value is not an `Array` nor a `Hash`.","summary":"<p>Assumes the underlying value is an <code>Array</code> or <code>Hash</code> and returns the element at the given <em>index_or_key</em>.</p>","abstract":false,"args":[{"name":"index_or_key","doc":null,"default_value":"","external_name":"index_or_key","restriction":"Int32 | String"}],"args_string":"(index_or_key : Int32 | String) : Any","args_html":"(index_or_key : Int32 | String) : <a href=\"../Secrets/Any.html\">Any</a>","location":{"filename":"src/secrets/any.cr","line_number":56,"url":null},"def":{"name":"[]","args":[{"name":"index_or_key","doc":null,"default_value":"","external_name":"index_or_key","restriction":"Int32 | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"case object = @raw\nwhen Array\n  if index_or_key.is_a?(Int)\n    object[index_or_key]\n  else\n    raise(\"Expected int key for Array#[], not #{object.class}\")\n  end\nwhen Hash\n  if index_or_key.is_a?(String)\n    object[index_or_key]\n  else\n    raise(\"Expected string key for Hash#[], not #{object.class}\")\n  end\nelse\n  raise(\"Expected Array or Hash, not #{object.class}\")\nend"}},{"id":"[]=(index_or_key:Int32|String,value:Type)-instance-method","html_id":"[]=(index_or_key:Int32|String,value:Type)-instance-method","name":"[]=","doc":"Assumes the underlying value is an `Array` or `Hash`\nand assigns a value at the given *index_or_key*.\n\nRaises if the underlying value is not an `Array` nor a `Hash`.","summary":"<p>Assumes the underlying value is an <code>Array</code> or <code>Hash</code> and assigns a value at the given <em>index_or_key</em>.</p>","abstract":false,"args":[{"name":"index_or_key","doc":null,"default_value":"","external_name":"index_or_key","restriction":"Int32 | String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Type"}],"args_string":"(index_or_key : Int32 | String, value : Type)","args_html":"(index_or_key : Int32 | String, value : <a href=\"../Secrets/Any/Type.html\">Type</a>)","location":{"filename":"src/secrets/any.cr","line_number":102,"url":null},"def":{"name":"[]=","args":[{"name":"index_or_key","doc":null,"default_value":"","external_name":"index_or_key","restriction":"Int32 | String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Type"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case object = @raw\nwhen Array\n  if index_or_key.is_a?(Int)\n    object[index_or_key] = Any.new(value)\n  else\n    raise(\"Expected int key for Array#[], not #{object.class}\")\n  end\nwhen Hash\n  if index_or_key.is_a?(String)\n    object[index_or_key] = Any.new(value)\n  end\nend"}},{"id":"[]?(index_or_key:Int32|String):Any?-instance-method","html_id":"[]?(index_or_key:Int32|String):Any?-instance-method","name":"[]?","doc":"Assumes the underlying value is an `Array` or `Hash` and returns the element\nat the given *index_or_key*, or `nil` if out of bounds or the key is missing.\n\nRaises if the underlying value is not an `Array` nor a `Hash`.","summary":"<p>Assumes the underlying value is an <code>Array</code> or <code>Hash</code> and returns the element at the given <em>index_or_key</em>, or <code>nil</code> if out of bounds or the key is missing.</p>","abstract":false,"args":[{"name":"index_or_key","doc":null,"default_value":"","external_name":"index_or_key","restriction":"Int32 | String"}],"args_string":"(index_or_key : Int32 | String) : Any?","args_html":"(index_or_key : Int32 | String) : <a href=\"../Secrets/Any.html\">Any</a>?","location":{"filename":"src/secrets/any.cr","line_number":79,"url":null},"def":{"name":"[]?","args":[{"name":"index_or_key","doc":null,"default_value":"","external_name":"index_or_key","restriction":"Int32 | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any | ::Nil","visibility":"Public","body":"case object = @raw\nwhen Array\n  if index_or_key.is_a?(Int)\n    object[index_or_key]?\n  else\n    raise(\"Expected int key for Array#[], not #{object.class}\")\n  end\nwhen Hash\n  if index_or_key.is_a?(String)\n    object[index_or_key]?\n  else\n    raise(\"Expected string key for Hash#[], not #{object.class}\")\n  end\nelse\n  raise(\"Expected Array or Hash, not #{object.class}\")\nend"}},{"id":"as_a:Array(String)-instance-method","html_id":"as_a:Array(String)-instance-method","name":"as_a","doc":"Checks that the underlying value is `Array(String)`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Array(String)</code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : Array(String)","location":{"filename":"src/secrets/any.cr","line_number":131,"url":null},"def":{"name":"as_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"(@raw.as(Array)).map do |e|\n  e.as_s\nend"}},{"id":"as_a?:Array(String)?-instance-method","html_id":"as_a?:Array(String)?-instance-method","name":"as_a?","doc":"Checks that the underlying value is `Array(String)`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Array(String)</code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Array(String)?","args_html":" : Array(String)?","location":{"filename":"src/secrets/any.cr","line_number":137,"url":null},"def":{"name":"as_a?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@raw.is_a?(Array) ? self.as_a : nil"}},{"id":"as_h:Hash(String,String)-instance-method","html_id":"as_h:Hash(String,String)-instance-method","name":"as_h","doc":"Checks that the underlying value is `Hash(String, String)`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Hash(String, String)</code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Hash(String, String)","args_html":" : Hash(String, String)","location":{"filename":"src/secrets/any.cr","line_number":143,"url":null},"def":{"name":"as_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"keys = (@raw.as(Hash)).keys\nvalues = (@raw.as(Hash)).values.map do |e|\n  e.as_s\nend\nHash.zip(keys, values)\n"}},{"id":"as_h?:Hash(String,String)?-instance-method","html_id":"as_h?:Hash(String,String)?-instance-method","name":"as_h?","doc":"Checks that the underlying value is `Hash(String, String)`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Hash(String, String)</code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Hash(String, String)?","args_html":" : Hash(String, String)?","location":{"filename":"src/secrets/any.cr","line_number":153,"url":null},"def":{"name":"as_h?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String) | ::Nil","visibility":"Public","body":"@raw.is_a?(Hash) ? self.as_h : nil"}},{"id":"as_s:String-instance-method","html_id":"as_s:String-instance-method","name":"as_s","doc":"Checks that the underlying value is `String`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>String</code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/secrets/any.cr","line_number":119,"url":null},"def":{"name":"as_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@raw.as(String)"}},{"id":"as_s?:String?-instance-method","html_id":"as_s?:String?-instance-method","name":"as_s?","doc":"Checks that the underlying value is `String`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>String</code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/secrets/any.cr","line_number":125,"url":null},"def":{"name":"as_s?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@raw.as?(String)"}},{"id":"raw:Type-instance-method","html_id":"raw:Type-instance-method","name":"raw","doc":"The raw underlying value, a `Type`.","summary":"<p>The raw underlying value, a <code><a href=\"../Secrets/Any/Type.html\">Type</a></code>.</p>","abstract":false,"args":[],"args_string":" : Type","args_html":" : <a href=\"../Secrets/Any/Type.html\">Type</a>","location":{"filename":"src/secrets/any.cr","line_number":16,"url":null},"def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Type","visibility":"Public","body":"@raw"}},{"id":"to_yaml(yaml:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(yaml:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"args_string":"(yaml : YAML::Nodes::Builder)","args_html":"(yaml : YAML::Nodes::Builder)","location":{"filename":"src/secrets/any.cr","line_number":166,"url":null},"def":{"name":"to_yaml","args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.to_yaml(yaml)"}}],"macros":[],"types":[{"html_id":"secrets/Secrets/Any/Type","path":"Secrets/Any/Type.html","kind":"alias","full_name":"Secrets::Any::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"secrets","program":false,"enum":false,"alias":true,"aliased":"(Array(Secrets::Any) | Hash(String, Secrets::Any) | String)","aliased_html":"Array(<a href=\"../../Secrets/Any.html\">Secrets::Any</a>) | Hash(String, <a href=\"../../Secrets/Any.html\">Secrets::Any</a>) | String","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"secrets/Secrets/Any","kind":"struct","full_name":"Secrets::Any","name":"Any"},"doc":"All valid Secrets::Any types","summary":"<p>All valid Secrets::Any types</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"secrets/Secrets/MissingKeyError","path":"Secrets/MissingKeyError.html","kind":"class","full_name":"Secrets::MissingKeyError","name":"MissingKeyError","abstract":false,"superclass":{"html_id":"secrets/RuntimeError","kind":"class","full_name":"RuntimeError","name":"RuntimeError"},"ancestors":[{"html_id":"secrets/RuntimeError","kind":"class","full_name":"RuntimeError","name":"RuntimeError"},{"html_id":"secrets/SystemError","kind":"module","full_name":"SystemError","name":"SystemError"},{"html_id":"secrets/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"secrets/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"secrets/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"secrets","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"secrets/Secrets","kind":"class","full_name":"Secrets","name":"Secrets"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/secrets.cr","line_number":42,"url":null},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]}]}})